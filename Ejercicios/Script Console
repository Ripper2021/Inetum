Jenkins.instance.getAllItems().each { job -> println(job.fullName)} //Este ejemplo me trae TODAS las tareas generadas


def command = "cmd /c ipconfig /flushdns"
def procedimiento = command.execute()
procedimiento.waitFor() //Esto es necesario ya que nos tenemos que asegurar que el script no continue hasta que el comando
//haya finalizado su ejecución
println("Salida del comando: ${procedimiento.text}")



def nombreTarea = "1"
def job = Jenkins.instance.getItem(nombreTarea)
println("Nombre del trabajo: ${job.fullName}")
println("Descripción: ${job.description}")


def nombreTarea = "HolaMundo"
def job = Jenkins.instance.getItem(nombreTarea)
job.delete()
println("Se ha eliminado el job: ${nombreTarea}")


def nombreTarea = "1"
def job = Jenkins.instance.getItemByFullName(nombreTarea)
def builds = job.builds
builds.each { build -> println("Numero de construcción: ${build.number}, Estado: ${build.result}")}



import jenkins.model.*
import hudson.security.*

def allUsers = User.getAll()

println("Todos los usuarios:")
allUsers.each { user ->
    println("- ${user.id}")
}


def usuarios_id = ["UsuarioFinal3", "UsuarioFinal2", "UsuarioFinal1"]
usuarios_id.each { usuario_id -> 
  def usuario = User.get(usuario_id)
  if(usuario != null)
  {
    usuario.delete()
    println("Usuario ${usuario_id} borrado exisotamente.")
  }
  else
    {
      println ("No se encontro el usuario con el id ${usuario_id}")
    }
               }



import jenkins.model.*
import hudson.security.*
def usuario_id = "UsuarioFinal"
def usuario = User.get(usuario_id)
if (usuario != null) 
{
  usuario.delete()
  println("Usuario ${usuario_id} borrado exitosamente.")
}
else
{
  println("No se encontro el usuario indicado con el siguiente id ${usuario_id}")
}





import jenkins.model.*
import hudson.model.*

def nombreTarea = "7"
def numeroBuild = 2
def job = Jenkins.instance.getItem(nombreTarea)
if (job instanceof AbstractProject){
 	def build = job.getBuildByNumber(numeroBuild)
  	if(build != null)
  	{
  		def log = build.getLog(100) //Obtengo las ultimas 100 lineas del log
      println("Registro de construcción ${numeroBuild} del trabajo ${nombreTarea}:")
      println(log)
  	}

     else
     {
       println("No se encontro ninguna construcción con el numero ${numeroBuild} para el trabajo ${nombreTarea}")
     }
}
  else
    {
      println("El trabajo ${nombreTarea} no es un proyecto abstracto.")
    }
//¿Que es un proyecto abstracto? 
/*
	Se refiere a un tipo de job que es una abstracción base para diferentes tipos de trabajos. Y son aquellos que implementan
la interfaz  "AbstractProject" que es una clase base pára varios tipos de trabajos, incluyento PROYECTOS DE ESTILO LIBRE,
PROYECTOS DE MAVEN, PROYECTOS DE PIPELINE, ETC. 

¿Por qué es importante esto?
Radica en que proporciona una estructura comun y funcionalidades basicas compartidas entre diferentes tipos de trabajos en Jenkins. 
*/
